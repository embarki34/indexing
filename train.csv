query_name,index_type,query,index_description,index_statement,execution_time,cpu_start,cpu_end,cpu_change,memory_start,memory_end,memory_change,result_count,select,insert,update,delete,create,drop,alter,join,where,group by,order by,having,limit,between,in,like,error,base_query
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
category_lookup_bitmap,bitmap,SELECT * FROM categories WHERE category_id = 5;,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.001418591,0,0,0,93.5390625,93.5390625,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,,category_lookup
category_performance_bitmap,bitmap,"SELECT c.name as category_name, DATE_TRUNC('month', o.order_date) as month, COUNT(DISTINCT o.order_id) as total_orders, SUM(oi.quantity) as items_sold, SUM(oi.quantity * oi.price) as revenue FROM categories c JOIN products p ON c.category_id = p.category_id JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id GROUP BY c.name, month ORDER BY c.name, month;",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),1.522991419,0,0,0,80.4609375,80.47265625,0.01171875,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,,category_performance
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
delivery_status_metrics_hash,hash,"SELECT status, COUNT(*) as order_count, AVG(EXTRACT(EPOCH FROM (CURRENT_TIMESTAMP - order_date))/86400) as avg_days_in_status, MIN(total_amount) as min_order_value, MAX(total_amount) as max_order_value, AVG(total_amount) as avg_order_value FROM orders GROUP BY status;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.091731548,0,0,0,98.30078125,98.30078125,0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,,delivery_status_metrics
email_domain_search_bitmap,bitmap,"SELECT user_id, email, first_name, last_name FROM users WHERE email LIKE '%@gmail.com';",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.003111839,0,0,0,111.5507813,111.5507813,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,,email_domain_search
exact_email_match_bitmap,bitmap,"SELECT user_id, first_name, last_name, email FROM Users WHERE email LIKE 'newtontodd@example.net';  -- Changed to single quotes and removed extra wildcard",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.002411842,0,0,0,93.54296875,93.54296875,0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,,exact_email_match
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
exact_order_status_bitmap,bitmap,"SELECT order_id, user_id, order_date, status FROM Orders WHERE status = 'Shipped';",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.148740053,0,0,0,95.22265625,122.9414063,27.71875,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,,exact_order_status
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
full_text_search_bitmap,bitmap,"SELECT product_id, name, description FROM Products WHERE to_tsvector('english', description) @@ to_tsquery('english', 'oil');",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.038839579,0,0,0,110.5859375,110.5859375,0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,,full_text_search
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
monthly_order_status_hash,hash,"SELECT DATE_TRUNC('month', order_date) as month, status, COUNT(*) as orders FROM orders GROUP BY month, status ORDER BY month, status;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.109017849,0,0,0,98.30078125,98.30078125,0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,,monthly_order_status
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
order_status_query,bitmap,"SELECT order_id, user_id, order_date, status FROM Orders WHERE status = 'Delivered';",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.145762682,0,0,0,104.625,125.96875,21.34375,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,,order_status_query
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
phone_area_code_hash,hash,"SELECT user_id, phone_number, email FROM users WHERE phone_number LIKE '212%';",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002228498,0,0,0,111.5507813,111.5507813,0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,,phone_area_code
prefix_email_match_gist,gist,"SELECT user_id, first_name, last_name, email FROM Users WHERE email LIKE 'john%';",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.00257349,0,0,0,92.453125,92.453125,0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,,prefix_email_match
price_range_products_hash,hash,"SELECT p.name, p.price, c.name as category FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price BETWEEN 100 AND 500 ORDER BY p.price;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.00306201,0,0,0,92.5234375,92.5234375,0,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,,price_range_products
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
product_info_gist,gist,"SELECT p.product_id, p.name, p.description, p.price, p.stock_quantity, c.name as category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.product_id = 100;",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.001981974,0,0,0,98.21875,98.21875,0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,,product_info
product_model_search_gist,gist,"SELECT p.product_id, p.name, p.price, p.stock_quantity, COUNT(oi.order_item_id) as times_ordered FROM products p LEFT JOIN orderitems oi ON p.product_id = oi.product_id WHERE p.name LIKE '% 2023' GROUP BY p.product_id, p.name, p.price, p.stock_quantity;",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002087116,0,0,0,111.5507813,111.5507813,0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,,product_model_search
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
product_performance_analysis_gist,gist,"SELECT p.product_id, p.name, c.name AS category_name, SUM(oi.quantity) AS total_units_sold, SUM(oi.quantity * oi.price) AS total_revenue, AVG(oi.price) AS avg_selling_price, COUNT(DISTINCT o.order_id) AS appearance_in_orders, COUNT(DISTINCT o.user_id) AS unique_customers, SUM(oi.quantity) / COUNT(DISTINCT o.order_id) AS avg_quantity_per_order, SUM(CASE WHEN o.status = 'Cancelled' THEN oi.quantity ELSE 0 END) AS cancelled_units, (SUM(CASE WHEN o.status = 'Cancelled' THEN oi.quantity ELSE 0 END) / NULLIF(SUM(oi.quantity), 0)) * 100 AS cancellation_rate, RANK() OVER (PARTITION BY c.category_id ORDER BY SUM(oi.quantity) DESC) AS rank_in_category, PERCENT_RANK() OVER (ORDER BY SUM(oi.quantity * oi.price) DESC) AS percentile_rank_overall FROM Products p JOIN Categories c ON p.category_id = c.category_id LEFT JOIN OrderItems oi ON p.product_id = oi.product_id LEFT JOIN Orders o ON oi.order_id = o.order_id GROUP BY p.product_id, p.name, c.name, c.category_id ORDER BY total_revenue DESC;",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),2.467996836,0,0,0,111.5351563,111.5351563,0,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,,product_performance_analysis
product_performance_pivot_gist,gist,"SELECT p.product_id, p.name, c.name AS category_name, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 1 THEN oi.quantity ELSE 0 END) AS Jan_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 2 THEN oi.quantity ELSE 0 END) AS Feb_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 3 THEN oi.quantity ELSE 0 END) AS Mar_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 4 THEN oi.quantity ELSE 0 END) AS Apr_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 5 THEN oi.quantity ELSE 0 END) AS May_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 6 THEN oi.quantity ELSE 0 END) AS Jun_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 7 THEN oi.quantity ELSE 0 END) AS Jul_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 8 THEN oi.quantity ELSE 0 END) AS Aug_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 9 THEN oi.quantity ELSE 0 END) AS Sep_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 10 THEN oi.quantity ELSE 0 END) AS Oct_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 11 THEN oi.quantity ELSE 0 END) AS Nov_Sales, SUM(CASE WHEN EXTRACT(MONTH FROM o.order_date) = 12 THEN oi.quantity ELSE 0 END) AS Dec_Sales, SUM(oi.quantity) AS Total_Sales, SUM(oi.quantity * oi.price) AS Total_Revenue FROM Products p JOIN Categories c ON p.category_id = c.category_id LEFT JOIN OrderItems oi ON p.product_id = oi.product_id LEFT JOIN Orders o ON oi.order_id = o.order_id AND EXTRACT(YEAR FROM o.order_date) = EXTRACT(YEAR FROM CURRENT_DATE) GROUP BY p.product_id, p.name, c.name ORDER BY Total_Revenue DESC;",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),2.157524586,0,0,0,93.171875,93.171875,0,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,,product_performance_pivot
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
product_sales_ranking_hash,hash,"SELECT p.product_id, p.name, SUM(oi.quantity) as total_sold, SUM(oi.quantity * oi.price) as total_revenue, RANK() OVER (ORDER BY SUM(oi.quantity * oi.price) DESC) as revenue_rank FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, p.name ORDER BY total_revenue DESC;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.220457315,0,0,0,93.1796875,93.1796875,0,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,,product_sales_ranking
product_search_hash,hash,"SELECT product_id, name, description, price FROM products WHERE name ILIKE '%wireless%' OR description ILIKE '%wireless%';",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.005933523,0,0,0,110.5859375,110.5859375,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,,product_search
product_stock_analysis,bitmap,"SELECT c.name as category, CASE WHEN p.stock_quantity = 0 THEN 'Out of Stock' WHEN p.stock_quantity <= 10 THEN 'Critical' WHEN p.stock_quantity <= 50 THEN 'Low' WHEN p.stock_quantity <= 100 THEN 'Medium' ELSE 'High' END as stock_level, COUNT(*) as product_count, SUM(p.stock_quantity) as total_stock FROM products p JOIN categories c ON p.category_id = c.category_id GROUP BY c.name, stock_level ORDER BY c.name, stock_level;",Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.003422499,0,0,0,111.5351563,111.5351563,0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,,product_stock_analysis
range_id_query_gist,gist,"SELECT order_id, order_date, status FROM Orders WHERE order_id BETWEEN 5000 AND 5100;",GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.001897335,0,0,0,111.5507813,111.5507813,0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,,range_id_query
range_product_price_hash,hash,"SELECT product_id, name, price FROM Products WHERE price BETWEEN 50 AND 150 ORDER BY price;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002632856,0,0,0,93.1796875,93.1796875,0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,,range_product_price
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
similar_category_products_hash,hash,"SELECT DISTINCT p1.name as product1, p2.name as product2, p1.price as price1, p2.price as price2, similarity(p1.name, p2.name) as name_similarity FROM products p1 JOIN products p2 ON p1.category_id = p2.category_id AND p1.product_id < p2.product_id WHERE similarity(p1.name, p2.name) > 0.4 ORDER BY name_similarity DESC;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.133069992,0,0,0,110.5859375,110.5859375,0,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,,similar_category_products
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
trigram_match_hash,hash,"select * from (SELECT product_id, name, description FROM Products WHERE 'heavy' % name) pind;",Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.003610611,0,0,0,110.9765625,110.9765625,0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,,trigram_match
,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,
user_lookup_btree,btree,"SELECT u.user_id, u.email, u.first_name, u.last_name, u.phone_number FROM users u WHERE u.email = 'customer@example.com';",B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002738953,0,0,0,98.2890625,98.2890625,0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,,user_lookup
user_orders_btree,btree,"SELECT u.user_id, u.first_name, u.last_name, u.email, o.order_id, o.order_date, o.total_amount, o.status FROM Users u JOIN Orders o ON u.user_id = o.user_id WHERE u.user_id = 5001 ORDER BY o.order_date DESC;",B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.003871679,0,0,0,98.2890625,98.2890625,0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,,user_orders
product_search_name_btree,btree,"SELECT product_id, name, price FROM Products WHERE name LIKE 'Awesome%';",B-Tree for prefix name search,CREATE INDEX btree_products_name ON Products (name),0.00123,0,0,0,100,100.1,0.1,50,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,product_search_name
order_date_range_btree,btree,"SELECT order_id, order_date, total_amount FROM Orders WHERE order_date BETWEEN '2024-01-01' AND '2024-03-31';",B-Tree for date range queries,CREATE INDEX btree_orders_date ON Orders (order_date),0.00545,0,0,0,101.2,101.5,0.3,1000,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,,order_date_range
user_email_lookup_hash,hash,"SELECT user_id, email FROM Users WHERE email = 'test@example.com';",Hash for exact email lookup,CREATE INDEX hash_users_email ON Users USING HASH (email),0.00087,0,0,0,99.5,99.6,0.1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,user_email_lookup
order_status_bitmap,bitmap,"SELECT order_id, status FROM Orders WHERE status = 'Shipped';",Bitmap for order status filtering,CREATE INDEX bitmap_orders_status ON Orders (status),0.00211,0,0,0,102.3,102.8,0.5,2000,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,order_status
product_description_gist,gist,"SELECT product_id, name, description FROM Products WHERE description LIKE '%amazing%';",GiST for text search in product descriptions,CREATE INDEX gist_products_description ON Products USING GIST (description gist_trgm_ops),0.00357,0,0,0,103.1,103.9,0.8,15,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,product_description
high_value_customers_btree,btree,"SELECT user_id, total_amount FROM Orders WHERE total_amount > 1000 ORDER BY total_amount DESC LIMIT 10;",B-Tree for high value customers,CREATE INDEX btree_orders_amount ON Orders (total_amount),0.00789,0,0,0,104.5,105.2,0.7,10,1,0,0,0,1,0,0,0,1,0,1,0,1,0,0,0,,high_value_customers
user_address_search_gist,gist,"SELECT user_id, shipping_address FROM Users WHERE shipping_address LIKE '%Main Street%';",GiST for address search,CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.00423,0,0,0,105.8,106.6,0.8,25,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,user_address_search
low_stock_products_bitmap,bitmap,"SELECT product_id, stock_quantity FROM Products WHERE stock_quantity < 10;",Bitmap for identifying low stock products,CREATE INDEX bitmap_products_stock ON Products (stock_quantity),0.00189,0,0,0,106.4,106.9,0.5,75,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,low_stock_products
recent_orders_btree,btree,"SELECT order_id, order_date FROM Orders ORDER BY order_date DESC LIMIT 5;",B-Tree for recent orders,CREATE INDEX btree_orders_date ON Orders (order_date),0.00291,0,0,0,107.7,108.2,0.5,5,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,,recent_orders
active_users_hash,hash,"SELECT user_id, last_login FROM Users WHERE last_login > CURRENT_DATE - INTERVAL '30 days';",Hash for active users,CREATE INDEX hash_users_last_login ON Users USING HASH (last_login),0.00675,0,0,0,108.5,109.3,0.8,300,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,active_users
category_product_count_btree,btree,"SELECT c.category_id, COUNT(p.product_id) FROM Categories c JOIN Products p ON c.category_id = p.category_id GROUP BY c.category_id;",B-Tree for category product counts,CREATE INDEX btree_products_category ON Products (category_id),0.00456,0,0,0,109.2,110,0.8,10,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,,category_product_count
shipping_city_lookup_hash,hash,"SELECT user_id, shipping_city FROM Users WHERE shipping_city = 'New York';",Hash index for equality lookups on city,CREATE INDEX hash_users_city ON Users USING HASH (shipping_city),0.00112,0,0,0,110.1,110.2,0.1,5,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,shipping_city_lookup
product_price_range_btree,btree,"SELECT product_id, name, price FROM Products WHERE price BETWEEN 50 AND 100 ORDER BY price;",B-Tree for product price range queries,CREATE INDEX btree_products_price ON Products (price),0.00345,0,0,0,111.3,112.1,0.8,250,1,0,0,0,1,0,0,0,1,0,1,0,0,1,0,0,,product_price_range
order_items_count_gist,gist,"SELECT order_id, COUNT(order_item_id) FROM OrderItems GROUP BY order_id HAVING COUNT(order_item_id) > 5;",GiST for order items count aggregations,CREATE INDEX gist_orderitems_order ON OrderItems (order_id),0.00567,0,0,0,112.5,113.3,0.8,150,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,,order_items_count
returning_customers_btree,btree,"SELECT u.user_id, COUNT(o.order_id) FROM Users u JOIN Orders o ON u.user_id = o.user_id GROUP BY u.user_id HAVING COUNT(o.order_id) > 1;",B-Tree for returning customer counts,CREATE INDEX btree_orders_user ON Orders (user_id),0.0089,0,0,0,113.6,114.4,0.8,500,1,0,0,0,1,0,0,1,0,1,0,1,0,0,0,0,,returning_customers
product_search_description_gist,gist,"SELECT product_id, name, description FROM Products WHERE description LIKE '%portable%';",GiST for product description searches,CREATE INDEX gist_products_description ON Products USING GIST (description gist_trgm_ops),0.00234,0,0,0,114.8,115.6,0.8,75,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,product_search_description
order_total_avg_bitmap,bitmap,SELECT AVG(total_amount) FROM Orders WHERE status = 'Delivered';,Bitmap index for average order total on delivered orders,CREATE INDEX bitmap_orders_status ON Orders (status),0.00156,0,0,0,115.9,116.4,0.5,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,order_total_avg
product_low_stock_hash,hash,"SELECT product_id, name FROM Products WHERE stock_quantity < 5;",Hash index for low stock products,CREATE INDEX hash_products_stock ON Products USING HASH (stock_quantity),0.00098,0,0,0,116.7,116.8,0.1,25,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,product_low_stock
category_sales_btree,btree,"SELECT c.category_id, SUM(p.price) FROM Categories c JOIN Products p ON c.category_id = p.category_id GROUP BY c.category_id;",B-Tree for category sales aggregations,CREATE INDEX btree_products_category ON Products (category_id),0.00678,0,0,0,117.5,118.3,0.8,10,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,,category_sales
recent_customers_gist,gist,"SELECT user_id, last_login FROM Users ORDER BY last_login DESC LIMIT 10;",GiST index for recently active users,CREATE INDEX gist_users_last_login ON Users USING GIST (last_login),0.00323,0,0,0,118.7,119.5,0.8,10,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,,recent_customers
user_order_count_bitmap,bitmap,"SELECT user_id, COUNT(order_id) FROM Orders GROUP BY user_id HAVING COUNT(order_id) > 2;",Bitmap for users with more than 2 orders,CREATE INDEX bitmap_orders_user ON Orders (user_id),0.00267,0,0,0,119.9,120.4,0.5,250,1,0,0,0,1,0,0,0,0,1,1,1,0,0,0,0,,user_order_count
top_selling_products_btree,btree,"SELECT product_id, SUM(quantity) FROM OrderItems GROUP BY product_id ORDER BY SUM(quantity) DESC LIMIT 5;",B-Tree for top selling products,CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.00901,0,0,0,120.7,121.5,0.8,5,1,0,0,0,1,0,0,0,0,1,1,1,1,0,0,0,,top_selling_products
product_id_lookup_hash,hash,"SELECT product_id, name FROM Products WHERE product_id = 123;",Hash index for exact product ID lookups,CREATE INDEX hash_products_id ON Products USING HASH (product_id),0.00076,0,0,0,121.8,121.9,0.1,1,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,product_id_lookup
order_total_range_gist,gist,"SELECT order_id, total_amount FROM Orders WHERE total_amount BETWEEN 50 AND 100;",GiST for order total range queries,CREATE INDEX gist_orders_amount ON Orders USING GIST (total_amount),0.00434,0,0,0,122.6,123.4,0.8,300,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,,order_total_range
category_top_products_btree,btree,"SELECT c.category_id, p.product_id, p.name FROM Categories c JOIN Products p ON c.category_id = p.category_id ORDER BY p.price DESC LIMIT 10;",B-Tree for category top priced products,CREATE INDEX btree_products_category ON Products (category_id),0.00555,0,0,0,123.8,124.6,0.8,10,1,0,0,0,1,0,0,1,0,0,1,1,1,0,0,0,,category_top_products
returning_customers_bitmap,bitmap,SELECT u.user_id FROM Users u JOIN Orders o ON u.user_id = o.user_id WHERE o.order_date > CURRENT_DATE - INTERVAL '6 months' GROUP BY u.user_id HAVING COUNT(o.order_id) > 1;,Bitmap index for returning customer counts within last 6 months,CREATE INDEX bitmap_orders_user ON Orders (user_id),0.00387,0,0,0,124.9,125.4,0.5,100,1,0,0,0,1,0,0,1,1,1,1,0,0,1,0,0,,returning_customers
user_name_search_gist,gist,"SELECT user_id, first_name, last_name FROM Users WHERE first_name LIKE 'John%';",GiST for user name searches,CREATE INDEX gist_users_name ON Users USING GIST (first_name gist_trgm_ops),0.00212,0,0,0,125.7,126.5,0.8,25,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,user_name_search
high_spending_users_btree,btree,"SELECT u.user_id, SUM(o.total_amount) FROM Users u JOIN Orders o ON u.user_id = o.user_id GROUP BY u.user_id ORDER BY SUM(o.total_amount) DESC LIMIT 5;",B-Tree for high spending customers,CREATE INDEX btree_orders_user ON Orders (user_id),0.00798,0,0,0,126.8,127.6,0.8,5,1,0,0,0,1,0,0,1,0,1,1,1,1,0,0,0,,high_spending_users
recent_orders_status_bitmap,bitmap,"SELECT order_id, status FROM Orders WHERE order_date > CURRENT_DATE - INTERVAL '7 days' AND status = 'Pending';",Bitmap index for recent pending orders,"CREATE INDEX bitmap_orders_date ON Orders (order_date), bitmap_orders_status ON Orders (status)",0.00445,0,0,0,127.9,128.4,0.5,50,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,,recent_orders_status
product_id_range_hash,hash,"SELECT product_id, name FROM Products WHERE product_id BETWEEN 500 AND 600;",Hash index for product ID range,CREATE INDEX hash_products_id ON Products USING HASH (product_id),0.00134,0,0,0,128.7,128.8,0.1,101,1,0,0,0,1,0,0,0,1,0,0,0,0,1,0,0,,product_id_range
category_top_seller_btree,btree,"SELECT c.category_id, p.product_id, SUM(oi.quantity) FROM Categories c JOIN Products p ON c.category_id = p.category_id JOIN OrderItems oi ON p.product_id = oi.product_id GROUP BY c.category_id, p.product_id ORDER BY SUM(oi.quantity) DESC LIMIT 10;",B-Tree for category top selling products,CREATE INDEX btree_products_category ON Products (category_id),0.00987,0,0,0,129.5,130.3,0.8,10,1,0,0,0,1,0,0,2,0,1,1,1,1,0,0,0,,category_top_seller
user_state_search_gist,gist,"SELECT user_id, shipping_state FROM Users WHERE shipping_state = 'CA';",GiST index for user state search,CREATE INDEX gist_users_state ON Users USING GIST (shipping_state gist_trgm_ops),0.00323,0,0,0,130.6,131.4,0.8,30,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,user_state_search
product_last_ordered_bitmap,bitmap,SELECT product_id FROM OrderItems WHERE order_date > CURRENT_DATE - INTERVAL '3 months' GROUP BY product_id;,Bitmap index for recently ordered products,CREATE INDEX bitmap_orderitems_order ON OrderItems (order_id),0.00256,0,0,0,131.7,132.2,0.5,500,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,,product_last_ordered
order_status_stats_hash,hash,"SELECT status, COUNT(order_id) FROM Orders GROUP BY status;",Hash index for order status statistics,CREATE INDEX hash_orders_status ON Orders USING HASH (status),0.00111,0,0,0,132.5,132.6,0.1,5,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,0,,order_status_stats
product_high_profit_btree,btree,"SELECT product_id, (price - cost) AS profit FROM Products ORDER BY profit DESC LIMIT 10;",B-Tree for high profit products,"CREATE INDEX btree_products_profit ON Products (price, cost)",0.01122,0,0,0,133.4,134.2,0.8,10,1,0,0,0,1,0,0,0,0,0,1,1,1,0,0,0,,product_high_profit
user_zip_code_lookup_gist,gist,"SELECT user_id, shipping_zip FROM Users WHERE shipping_zip LIKE '90%';",GiST index for user ZIP code lookup,CREATE INDEX gist_users_zip ON Users USING GIST (shipping_zip gist_trgm_ops),0.00434,0,0,0,134.6,135.4,0.8,120,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,1,,user_zip_code_lookup
product_discounted_bitmap,bitmap,"SELECT product_id, discount_price FROM Products WHERE discount_price IS NOT NULL;",Bitmap index for discounted products,CREATE INDEX bitmap_products_discount ON Products (discount_price),0.00245,0,0,0,135.7,136.2,0.5,80,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,product_discounted
category_product_min_price_hash,hash,"SELECT c.category_id, MIN(p.price) FROM Categories c JOIN Products p ON c.category_id = p.category_id GROUP BY c.category_id;",Hash index for category product minimum price,CREATE INDEX hash_products_category ON Products USING HASH (category_id),0.00123,0,0,0,136.9,137,0.1,10,1,0,0,0,1,0,0,1,0,1,0,0,0,0,0,0,,category_product_min_price
recent_product_purchases_btree,btree,"SELECT u.user_id, o.order_id, oi.product_id FROM Users u JOIN Orders o ON u.user_id = o.user_id JOIN OrderItems oi ON o.order_id = oi.order_id WHERE o.order_date > CURRENT_DATE - INTERVAL '1 month' ORDER BY o.order_date DESC;",B-Tree for recent product purchases,CREATE INDEX btree_orders_user ON Orders (user_id),0.00876,0,0,0,137.8,138.6,0.8,500,1,0,0,0,1,0,0,2,1,0,1,0,1,0,0,0,,recent_product_purchases
user_age_segmentation_gist,gist,"SELECT user_id, (CURRENT_DATE - birthdate) / 365 AS age FROM Users WHERE (CURRENT_DATE - birthdate) / 365 BETWEEN 18 AND 30;",GiST index for user age segmentation,CREATE INDEX gist_users_birthdate ON Users USING GIST (birthdate),0.00444,0,0,0,138.9,139.7,0.8,250,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,,user_age_segmentation
discounted_product_range_bitmap,bitmap,"SELECT product_id, discount_price FROM Products WHERE discount_price BETWEEN 10 AND 20;",Bitmap index for discounted product price range,CREATE INDEX bitmap_products_discount ON Products (discount_price),0.00357,0,0,0,140.1,140.6,0.5,100,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,,discounted_product_range
user_login_frequency_hash,hash,"SELECT u.user_id, COUNT(s.session_id) FROM Users u JOIN Sessions s ON u.user_id = s.user_id GROUP BY u.user_id HAVING COUNT(s.session_id) > 100;",Hash index for user login frequency,CREATE INDEX hash_sessions_user ON Sessions USING HASH (user_id),0.00212,0,0,0,140.8,140.9,0.1,500,1,0,0,0,1,0,0,1,0,1,1,1,0,0,0,0,,user_login_frequency
category_high_stock_btree,btree,"SELECT c.category_id, p.product_id FROM Categories c JOIN Products p ON c.category_id = p.category_id WHERE p.stock_quantity > 100 ORDER BY c.category_id;",B-Tree for categories with high stock products,CREATE INDEX btree_products_category ON Products (category_id),0.00989,0,0,0,141.7,142.5,0.8,200,1,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,,category_high_stock
recent_product_view_gist,gist,"SELECT product_id, last_viewed FROM Products ORDER BY last_viewed DESC LIMIT 20;",GiST for recent product views,CREATE INDEX gist_products_last_viewed ON Products USING GIST (last_viewed),0.00555,0,0,0,142.9,143.7,0.8,20,1,0,0,0,1,0,0,0,0,0,1,0,1,0,0,0,,recent_product_view
user_purchase_history_bitmap,bitmap,"SELECT u.user_id, p.product_id FROM Users u JOIN Orders o ON u.user_id = o.user_id JOIN OrderItems oi ON o.order_id = oi.order_id WHERE o.order_date > CURRENT_DATE - INTERVAL '1 year' GROUP BY u.user_id, p.product_id;",Bitmap index for user purchase history over the last year,CREATE INDEX bitmap_orderitems_order ON OrderItems (order_id),0.00323,0,0,0,144.1,144.6,0.5,1000,1,0,0,0,1,0,0,2,1,0,1,0,1,0,0,0,,user_purchase_history
order_last_status_change_hash,hash,"SELECT order_id, last_status_update FROM Orders WHERE last_status_update > CURRENT_DATE - INTERVAL '7 days';",Hash index for recently updated order status,CREATE INDEX hash_orders_last_update ON Orders USING HASH (last_status_update),0.00188,0,0,0,144.9,145,0.1,75,1,0,0,0,1,0,0,0,1,0,0,0,1,0,0,0,,order_last_status_change
product_search_category_btree,btree,"SELECT p.product_id, p.name, c.category_id FROM Products p JOIN Categories c ON p.category_id = c.category_id WHERE c.name = 'Electronics' ORDER BY p.product_id;",B-Tree for searching products within a category,CREATE INDEX btree_products_category ON Products (category_id),0.00697,0,0,0,145.8,146.6,0.8,250,1,0,0,0,1,0,0,1,1,0,1,1,1,0,0,0,,product_search_category
user_account_creation_gist,gist,"SELECT user_id, creation_date FROM Users WHERE creation_date BETWEEN '2023-01-01' AND '2023-12-31';",GiST index for user account creation within a time range,CREATE INDEX gist_users_creation ON Users USING GIST (creation_date),0.00345,0,0,0,146.9,147.7,0.8,150,1,0,0,0,1,0,0,0,1,0,0,0,1,1,0,0,,user_account_creation
discounted_products_count_bitmap,bitmap,"SELECT category_id, COUNT(product_id) FROM Products WHERE discount_price IS NOT NULL GROUP BY category_id;",Bitmap index for discounted products count per category,CREATE INDEX bitmap_products_discount ON Products (discount_price),0.00278,0,0,0,147.9,148.4,0.5,10,1,0,0,0,1,0,0,0,0,1,0,1,0,0,0,0,,discounted_products_count
recent_product_sold_hash,hash,"SELECT product_id, order_date FROM OrderItems WHERE order_date > CURRENT_DATE - INTERVAL '90 days' GROUP BY product_id, order_date;",Hash index for recently sold products,CREATE INDEX hash_orderitems_product ON OrderItems USING HASH (product_id),0.00456,0,0,0,148.7,148.8,0.1,800,1,0,0,0,1,0,0,0,0,1,0,1,1,0,0,0,,recent_product_sold
category_average_price_btree,btree,"SELECT c.category_id, AVG(p.price) FROM Categories c JOIN Products p ON c.category_id = p.category_id GROUP BY c.category_id;",B-Tree for category average product price,CREATE INDEX btree_products_category ON Products (category_id),0.00777,0,0,0,149.6,150.4,0.8,10,1,0,0,0,1,0,0,1,0,1,0,1,1,0,0,0,,category_average_price
user_product_interaction_gist,gist,"SELECT u.user_id, p.product_id FROM Users u JOIN Orders o ON u.user_id = o.user_id JOIN OrderItems oi ON o.order_id = oi.order_id WHERE u.user_id = 123 AND p.price BETWEEN 10 AND 50;",GiST index for specific user's product interaction,CREATE INDEX gist_orderitems_product ON OrderItems USING GIST (product_id),0.00568,0,0,0,150.8,151.6,0.8,45,1,0,0,0,1,0,0,2,1,0,0,0,1,1,0,0,,user_product_interaction
product_stock_level_bitmap,bitmap,SELECT product_id FROM Products WHERE stock_quantity = 0;,Bitmap index for out of stock products,CREATE INDEX bitmap_products_stock ON Products (stock_quantity),0.00199,0,0,0,151.9,152.4,0.5,100,1,0,0,0,1,0,0,0,1,0,0,0,0,0,0,0,,product_stock_level
top_customers_by_order_count_btree,btree,SELECT user_id FROM Orders GROUP BY user_id ORDER BY COUNT(*) DESC LIMIT 10;,B-Tree index for top customer order count,CREATE INDEX btree_orders_user ON Orders (user_id),0.00987,0,0,0,152.7,153.5,0.8,10,1,0,0,0,1,0,0,0,0,1,1,0,1,0,0,0,,top_customers_by_order_count
recent_product_category_search_gist,gist,SELECT p.product_id FROM Products p JOIN Categories c ON p.category_id = c.category_id WHERE c.name = 'Electronics' AND p.last_viewed > CURRENT_DATE - INTERVAL '7 days';,GiST index for recent category based product searches,CREATE INDEX gist_products_last_viewed ON Products USING GIST (last_viewed),0.00423,0,0,0,153.8,154.6,0.8,60,1,0,0,0,1,0,0,1,1,0,0,0,1,1,0,0,,recent_product_category_search
