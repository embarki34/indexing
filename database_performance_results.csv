query_name,index_type,index_description,index_statement,execution_time,cpu_start,cpu_end,cpu_change,memory_start,memory_end,memory_change,result_count,select,insert,update,delete,create,drop,alter,join,where,group by,order by,having,limit,between,in,like,error
category_performance,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),1.556614875793457,0.0,0.0,0.0,79.29296875,80.38671875,1.09375,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,
category_performance_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),1.615121603012085,0.0,0.0,0.0,80.41796875,80.44140625,0.0234375,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,
category_performance_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),1.5339951515197754,0.0,0.0,0.0,80.44921875,80.45703125,0.0078125,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,
category_performance_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),1.57753586769104,0.0,0.0,0.0,80.45703125,80.45703125,0.0,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,
category_performance_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),1.5292415618896484,0.0,0.0,0.0,80.45703125,80.45703125,0.0,2160,1,0,0,0,0,0,0,3,0,1,1,0,0,0,4,0,
customer_order_trends,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),1.447092056274414,0.0,0.0,0.0,80.45703125,197.50390625,117.046875,276934,1,0,0,0,0,0,0,2,0,1,1,0,0,0,2,0,
customer_order_trends_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),1.374279499053955,0.0,0.0,0.0,84.00390625,197.14453125,113.140625,276934,1,0,0,0,0,0,0,2,0,1,1,0,0,0,2,0,
customer_order_trends_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),1.345428466796875,0.0,0.0,0.0,84.2421875,197.23046875,112.98828125,276934,1,0,0,0,0,0,0,2,0,1,1,0,0,0,2,0,
customer_order_trends_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),1.3798413276672363,0.0,0.0,0.0,86.52734375,197.203125,110.67578125,276934,1,0,0,0,0,0,0,2,0,1,1,0,0,0,2,0,
customer_order_trends_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),1.4186654090881348,0.0,0.0,0.0,87.1328125,197.12109375,109.98828125,276934,1,0,0,0,0,0,0,2,0,1,1,0,0,0,2,0,
customer_segmentation,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.5234839916229248,0.0,0.0,0.0,88.85546875,91.8125,2.95703125,10000,1,0,0,0,0,0,0,1,0,1,2,1,0,1,6,0,
customer_segmentation_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.45276379585266113,0.0,0.0,0.0,89.5546875,91.47265625,1.91796875,10000,1,0,0,0,0,0,0,1,0,1,2,1,0,1,6,0,
customer_segmentation_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.45867276191711426,0.0,0.0,0.0,89.56640625,91.421875,1.85546875,10000,1,0,0,0,0,0,0,1,0,1,2,1,0,1,6,0,
customer_segmentation_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.4306964874267578,0.0,0.0,0.0,89.60546875,91.59765625,1.9921875,10000,1,0,0,0,0,0,0,1,0,1,2,1,0,1,6,0,
customer_segmentation_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.4372284412384033,0.0,0.0,0.0,89.60546875,91.3203125,1.71484375,10000,1,0,0,0,0,0,0,1,0,1,2,1,0,1,6,0,
customer_spending,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.18439817428588867,0.0,0.0,0.0,89.7265625,90.4140625,0.6875,10000,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
customer_spending_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.17964649200439453,0.0,0.0,0.0,90.4140625,90.453125,0.0390625,10000,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
customer_spending_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.18231773376464844,0.0,0.0,0.0,90.453125,90.453125,0.0,10000,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
customer_spending_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.1771383285522461,0.0,0.0,0.0,90.453125,90.453125,0.0,10000,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
customer_spending_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.18923139572143555,0.0,0.0,0.0,90.453125,90.453125,0.0,10000,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
multi_column_category_price,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002110719680786133,0.0,0.0,0.0,90.453125,90.453125,0.0,6,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
multi_column_category_price_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002347230911254883,0.0,0.0,0.0,90.453125,90.45703125,0.00390625,6,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
multi_column_category_price_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0019378662109375,0.0,0.0,0.0,90.45703125,90.45703125,0.0,6,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
multi_column_category_price_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.005515098571777344,0.0,0.0,0.0,90.45703125,90.45703125,0.0,6,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
multi_column_category_price_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0029799938201904297,0.0,0.0,0.0,90.45703125,90.45703125,0.0,6,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
order_history,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.14025330543518066,0.0,0.0,0.0,90.45703125,97.92578125,7.46875,34379,1,0,0,0,0,0,0,2,1,1,1,0,0,1,2,0,
order_history_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.16369390487670898,0.0,0.0,0.0,91.3203125,97.3828125,6.0625,34379,1,0,0,0,0,0,0,2,1,1,1,0,0,1,2,0,
order_history_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.16439437866210938,0.0,0.0,0.0,92.33203125,97.8359375,5.50390625,34379,1,0,0,0,0,0,0,2,1,1,1,0,0,1,2,0,
order_history_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.17628002166748047,0.0,0.0,0.0,91.70703125,97.515625,5.80859375,34379,1,0,0,0,0,0,0,2,1,1,1,0,0,1,2,0,
order_history_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.1597309112548828,0.0,0.0,0.0,91.3359375,97.39453125,6.05859375,34379,1,0,0,0,0,0,0,2,1,1,1,0,0,1,2,0,
prefix_email_match,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0048983097076416016,0.0,0.0,0.0,92.34375,92.34375,0.0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
prefix_email_match_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.009326934814453125,0.0,0.0,0.0,92.34375,92.34375,0.0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
prefix_email_match_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0032134056091308594,0.0,0.0,0.0,92.34375,92.34375,0.0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
prefix_email_match_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.007426023483276367,0.0,0.0,0.0,92.34375,92.34375,0.0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
prefix_email_match_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0027468204498291016,0.0,0.0,0.0,92.34375,92.34375,0.0,123,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
price_range_products,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0031294822692871094,0.0,0.0,0.0,92.34375,92.34765625,0.00390625,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
price_range_products_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.006382942199707031,0.0,0.0,0.0,92.34765625,92.34765625,0.0,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
price_range_products_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0034542083740234375,0.0,0.0,0.0,92.34765625,92.34765625,0.0,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
price_range_products_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.00472259521484375,0.0,0.0,0.0,92.34765625,92.29296875,-0.0546875,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
price_range_products_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.003272533416748047,0.0,0.0,0.0,92.29296875,92.29296875,0.0,785,1,0,0,0,0,0,0,1,1,0,1,0,0,1,1,0,
product_performance_pivot,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),2.2804243564605713,0.0,0.0,0.0,92.29296875,93.0625,0.76953125,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,
product_performance_pivot_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),2.231757164001465,0.0,0.0,0.0,93.0625,93.0625,0.0,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,
product_performance_pivot_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),2.17362380027771,0.0,0.0,0.0,93.0625,93.0625,0.0,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,
product_performance_pivot_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),2.374967336654663,0.0,0.0,0.0,93.0625,93.0625,0.0,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,
product_performance_pivot_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),2.257152795791626,0.0,0.0,0.0,93.0625,93.0625,0.0,2000,1,0,0,0,0,0,0,3,0,1,1,0,0,0,3,0,
product_price_changes,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),1.7213692665100098,0.0,0.0,0.0,93.0625,93.0625,0.0,0,1,0,0,0,0,0,0,2,0,1,1,1,0,0,6,0,
product_price_changes_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),1.6855802536010742,0.0,0.0,0.0,93.0625,93.0625,0.0,0,1,0,0,0,0,0,0,2,0,1,1,1,0,0,6,0,
product_price_changes_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),1.7271032333374023,0.0,0.0,0.0,93.0625,93.0625,0.0,0,1,0,0,0,0,0,0,2,0,1,1,1,0,0,6,0,
product_price_changes_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),1.8002607822418213,0.0,0.0,0.0,93.0625,93.0625,0.0,0,1,0,0,0,0,0,0,2,0,1,1,1,0,0,6,0,
product_price_changes_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),1.7310469150543213,0.0,0.0,0.0,93.0625,93.0625,0.0,0,1,0,0,0,0,0,0,2,0,1,1,1,0,0,6,0,
product_sales_ranking,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.22782015800476074,0.0,0.0,0.0,93.0625,93.07421875,0.01171875,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,
product_sales_ranking_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.2433156967163086,0.0,0.0,0.0,93.078125,93.078125,0.0,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,
product_sales_ranking_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.23937416076660156,0.0,0.0,0.0,93.078125,93.078125,0.0,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,
product_sales_ranking_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.2501823902130127,0.0,0.0,0.0,93.078125,93.078125,0.0,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,
product_sales_ranking_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.2462449073791504,0.0,0.0,0.0,93.078125,93.078125,0.0,2000,1,0,0,0,0,0,0,1,0,1,2,0,0,0,1,0,
range_product_price,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0026667118072509766,0.0,0.0,0.0,93.078125,93.078125,0.0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_product_price_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0026314258575439453,0.0,0.0,0.0,93.078125,93.078125,0.0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_product_price_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005827188491821289,0.0,0.0,0.0,93.078125,93.078125,0.0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_product_price_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.007584095001220703,0.0,0.0,0.0,93.078125,93.078125,0.0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_product_price_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0024263858795166016,0.0,0.0,0.0,93.078125,93.078125,0.0,208,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_sort_order_date,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.02456498146057129,0.0,0.0,0.0,93.078125,93.4296875,0.3515625,8775,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_sort_order_date_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04297661781311035,0.0,0.0,0.0,93.4296875,93.4296875,0.0,8775,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_sort_order_date_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.03800058364868164,0.0,0.0,0.0,93.4296875,93.4296875,0.0,8775,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_sort_order_date_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.02190423011779785,0.0,0.0,0.0,93.4296875,93.4296875,0.0,8775,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
range_sort_order_date_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.06336498260498047,0.0,0.0,0.0,93.4296875,93.4296875,0.0,8775,1,0,0,0,0,0,0,0,1,0,1,0,0,1,0,0,
sales_dashboard,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...day_rank_in_year FROM DailySales ds ORDER BY sale_date DESC;
                                                                       ^
"
sales_dashboard_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...day_rank_in_year FROM DailySales ds ORDER BY sale_date DESC;
                                                                       ^
"
sales_dashboard_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...day_rank_in_year FROM DailySales ds ORDER BY sale_date DESC;
                                                                       ^
"
sales_dashboard_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...day_rank_in_year FROM DailySales ds ORDER BY sale_date DESC;
                                                                       ^
"
sales_dashboard_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...day_rank_in_year FROM DailySales ds ORDER BY sale_date DESC;
                                                                       ^
"
time_series_analysis,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...ue FROM MonthlyRevenue mr ORDER BY mr.category_id, mr.month;
                                                                       ^
"
time_series_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...ue FROM MonthlyRevenue mr ORDER BY mr.category_id, mr.month;
                                                                       ^
"
time_series_analysis_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...ue FROM MonthlyRevenue mr ORDER BY mr.category_id, mr.month;
                                                                       ^
"
time_series_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...ue FROM MonthlyRevenue mr ORDER BY mr.category_id, mr.month;
                                                                       ^
"
time_series_analysis_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...ue FROM MonthlyRevenue mr ORDER BY mr.category_id, mr.month;
                                                                       ^
"
category_lookup,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.003246307373046875,0.0,0.0,0.0,93.43359375,93.43359375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
category_lookup_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.004854679107666016,0.0,0.0,0.0,93.43359375,93.43359375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
category_lookup_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0019223690032958984,0.0,0.0,0.0,93.43359375,93.43359375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
category_lookup_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.005019664764404297,0.0,0.0,0.0,93.43359375,93.43359375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
category_lookup_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0030083656311035156,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
category_products,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.004170656204223633,0.0,0.0,0.0,93.4375,93.4375,0.0,101,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
category_products_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002040863037109375,0.0,0.0,0.0,93.4375,93.4375,0.0,101,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
category_products_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005777597427368164,0.0,0.0,0.0,93.4375,93.4375,0.0,101,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
category_products_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.006271839141845703,0.0,0.0,0.0,93.4375,93.4375,0.0,101,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
category_products_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.002039194107055664,0.0,0.0,0.0,93.4375,93.4375,0.0,101,1,0,0,0,1,0,0,0,1,0,1,0,0,0,0,0,
daily_order_lookup,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04718756675720215,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,3,1,1,0,0,0,0,4,0,
daily_order_lookup_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.00443267822265625,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,3,1,1,0,0,0,0,4,0,
daily_order_lookup_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.04296517372131348,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,3,1,1,0,0,0,0,4,0,
daily_order_lookup_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.039557695388793945,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,3,1,1,0,0,0,0,4,0,
daily_order_lookup_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.043195247650146484,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,3,1,1,0,0,0,0,4,0,
exact_email_match,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002063274383544922,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
exact_email_match_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0037364959716796875,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
exact_email_match_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005712270736694336,0.0,0.0,0.0,93.4375,93.4375,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
exact_email_match_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0024690628051757812,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
exact_email_match_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.003626108169555664,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,1,
exact_order_lookup,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04353594779968262,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,2,0,
exact_order_lookup_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.003938436508178711,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,2,0,
exact_order_lookup_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0401456356048584,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,2,0,
exact_order_lookup_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.03826189041137695,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,2,0,
exact_order_lookup_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.040760040283203125,0.0,0.0,0.0,93.421875,93.421875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,2,0,
exact_order_status,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.18932104110717773,0.0,0.0,0.0,93.421875,123.328125,29.90625,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_order_status_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.17415237426757812,0.0,0.0,0.0,94.37109375,123.16796875,28.796875,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_order_status_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.17829203605651855,0.0,0.0,0.0,96.1328125,122.85546875,26.72265625,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_order_status_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.1816692352294922,0.0,0.0,0.0,97.31640625,123.3828125,26.06640625,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_order_status_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.17300915718078613,0.0,0.0,0.0,98.15234375,122.73046875,24.578125,118505,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_product_match,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002084016799926758,0.0,0.0,0.0,98.88671875,98.88671875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_product_match_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0019643306732177734,0.0,0.0,0.0,98.88671875,98.88671875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_product_match_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0017132759094238281,0.0,0.0,0.0,98.88671875,98.88671875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_product_match_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0017735958099365234,0.0,0.0,0.0,98.88671875,98.88671875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
exact_product_match_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0019164085388183594,0.0,0.0,0.0,98.88671875,98.88671875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
join_exact_match,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.05569958686828613,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
join_exact_match_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.004198551177978516,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
join_exact_match_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.050908565521240234,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
join_exact_match_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.04045748710632324,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
join_exact_match_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.04177665710449219,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
order_details,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04159045219421387,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
order_details_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0064618587493896484,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
order_details_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.03882431983947754,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
order_details_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.042856454849243164,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
order_details_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.041501522064208984,0.0,0.0,0.0,98.88671875,98.88671875,0.0,5,1,0,0,0,0,0,0,2,1,0,0,0,0,0,2,0,
product_details,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04795384407043457,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,3,0,
product_details_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0036017894744873047,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,3,0,
product_details_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.06467747688293457,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,3,0,
product_details_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.04835844039916992,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,3,0,
product_details_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.044684648513793945,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,2,1,1,0,0,0,0,3,0,
product_info,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0016655921936035156,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
product_info_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0019290447235107422,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
product_info_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0018551349639892578,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
product_info_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002457141876220703,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
product_info_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0016481876373291016,0.0,0.0,0.0,98.88671875,98.88671875,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
specific_product_orders,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04783487319946289,0.0,0.0,0.0,98.88671875,98.8984375,0.01171875,735,1,0,0,0,0,0,0,3,1,0,0,0,0,0,3,0,
specific_product_orders_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.14573001861572266,0.0,0.0,0.0,98.8984375,98.8984375,0.0,735,1,0,0,0,0,0,0,3,1,0,0,0,0,0,3,0,
specific_product_orders_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.043256521224975586,0.0,0.0,0.0,98.8984375,98.8984375,0.0,735,1,0,0,0,0,0,0,3,1,0,0,0,0,0,3,0,
specific_product_orders_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.07403111457824707,0.0,0.0,0.0,98.8984375,98.8984375,0.0,735,1,0,0,0,0,0,0,3,1,0,0,0,0,0,3,0,
specific_product_orders_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.06952619552612305,0.0,0.0,0.0,98.8984375,98.8984375,0.0,735,1,0,0,0,0,0,0,3,1,0,0,0,0,0,3,0,
user_last_order,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.03540372848510742,0.0,0.0,0.0,98.8984375,98.8984375,0.0,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,
user_last_order_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002083301544189453,0.0,0.0,0.0,98.8984375,98.8984375,0.0,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,
user_last_order_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.02794337272644043,0.0,0.0,0.0,98.8984375,98.8984375,0.0,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,
user_last_order_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.03173065185546875,0.0,0.0,0.0,98.8984375,98.8984375,0.0,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,
user_last_order_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.026829242706298828,0.0,0.0,0.0,98.8984375,98.8984375,0.0,1,1,0,0,0,0,0,0,1,1,0,1,0,1,0,1,0,
user_lookup,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0025005340576171875,0.0,0.0,0.0,98.8984375,98.8984375,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
user_lookup_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002377033233642578,0.0,0.0,0.0,98.8984375,98.8984375,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
user_lookup_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0025644302368164062,0.0,0.0,0.0,98.8984375,98.8984375,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
user_lookup_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0028734207153320312,0.0,0.0,0.0,98.8984375,98.8984375,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
user_lookup_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0047605037689208984,0.0,0.0,0.0,98.8984375,98.8984375,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
user_orders,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.02742791175842285,0.0,0.0,0.0,98.8984375,98.8984375,0.0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,
user_orders_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.004235506057739258,0.0,0.0,0.0,98.8984375,98.8984375,0.0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,
user_orders_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.02637934684753418,0.0,0.0,0.0,98.8984375,98.8984375,0.0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,
user_orders_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.027690649032592773,0.0,0.0,0.0,98.8984375,98.8984375,0.0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,
user_orders_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.02533745765686035,0.0,0.0,0.0,98.8984375,98.8984375,0.0,48,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,0,
analytics_status_count,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.07198119163513184,0.0,0.0,0.0,98.8984375,98.8984375,0.0,4,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,
analytics_status_count_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.044313907623291016,0.0,0.0,0.0,98.8984375,98.8984375,0.0,4,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,
analytics_status_count_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04582643508911133,0.0,0.0,0.0,98.8984375,98.8984375,0.0,4,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,
analytics_status_count_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.052310943603515625,0.0,0.0,0.0,98.8984375,98.8984375,0.0,4,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,
analytics_status_count_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.04274892807006836,0.0,0.0,0.0,98.8984375,98.8984375,0.0,4,1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,0,
category_products,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0026662349700927734,0.0,0.0,0.0,98.8984375,98.8984375,0.0,20,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,
category_products_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0022156238555908203,0.0,0.0,0.0,98.8984375,98.8984375,0.0,20,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,
category_products_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.003416299819946289,0.0,0.0,0.0,98.8984375,98.8984375,0.0,20,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,
category_products_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002442598342895508,0.0,0.0,0.0,98.8984375,98.8984375,0.0,20,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,
category_products_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.003023386001586914,0.0,0.0,0.0,98.8984375,98.8984375,0.0,20,1,0,0,0,0,0,0,1,0,1,0,0,0,0,1,0,
cohort_analysis,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...onth_number <= 12 ORDER BY cr.cohort_month, cr.month_number;
                                                                       ^
"
cohort_analysis_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...onth_number <= 12 ORDER BY cr.cohort_month, cr.month_number;
                                                                       ^
"
cohort_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...onth_number <= 12 ORDER BY cr.cohort_month, cr.month_number;
                                                                       ^
"
cohort_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...onth_number <= 12 ORDER BY cr.cohort_month, cr.month_number;
                                                                       ^
"
cohort_analysis_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at end of input
LINE 1: ...onth_number <= 12 ORDER BY cr.cohort_month, cr.month_number;
                                                                       ^
"
complex_and_or_filter,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.003935098648071289,0.0,0.0,0.0,98.90234375,98.90234375,0.0,182,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
complex_and_or_filter_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0021049976348876953,0.0,0.0,0.0,98.90234375,98.90234375,0.0,182,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
complex_and_or_filter_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0023114681243896484,0.0,0.0,0.0,98.90234375,98.90234375,0.0,182,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
complex_and_or_filter_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002361297607421875,0.0,0.0,0.0,98.90234375,98.90234375,0.0,182,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
complex_and_or_filter_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.002239704132080078,0.0,0.0,0.0,98.90234375,98.90234375,0.0,182,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
delivery_status_metrics,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.10578107833862305,0.0,0.0,0.0,98.90234375,98.90234375,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,
delivery_status_metrics_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.11915898323059082,0.0,0.0,0.0,98.90234375,98.90234375,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,
delivery_status_metrics_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.09846925735473633,0.0,0.0,0.0,98.90234375,98.90234375,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,
delivery_status_metrics_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.11594772338867188,0.0,0.0,0.0,98.90234375,98.90234375,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,
delivery_status_metrics_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.09694552421569824,0.0,0.0,0.0,98.90234375,98.90234375,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,3,0,
monthly_order_status,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.10936188697814941,0.0,0.0,0.0,98.90234375,98.90234375,0.0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
monthly_order_status_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.13910412788391113,0.0,0.0,0.0,98.90234375,98.90234375,0.0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
monthly_order_status_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.11698722839355469,0.0,0.0,0.0,98.90234375,98.90234375,0.0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
monthly_order_status_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.10804200172424316,0.0,0.0,0.0,98.90234375,98.90234375,0.0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
monthly_order_status_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.11445236206054688,0.0,0.0,0.0,98.90625,98.90625,0.0,432,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
multiple_status_or,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.3401942253112793,0.0,0.0,0.0,98.90625,164.2734375,65.3671875,237361,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
multiple_status_or_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.385822057723999,0.0,0.0,0.0,101.0234375,164.34375,63.3203125,-1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
multiple_status_or_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.42357945442199707,0.0,0.0,0.0,101.79296875,164.10546875,62.3125,237361,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
multiple_status_or_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.3683640956878662,0.0,0.0,0.0,102.32421875,164.25390625,61.9296875,237361,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
multiple_status_or_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.3396787643432617,0.0,0.0,0.0,104.33984375,164.34375,60.00390625,237361,1,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
order_status_analysis,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.03608369827270508,0.0,0.0,0.0,104.98828125,104.98828125,0.0,3,1,0,0,0,0,0,0,0,1,1,1,0,0,1,3,0,
order_status_analysis_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.01816582679748535,0.0,0.0,0.0,104.98828125,104.98828125,0.0,3,1,0,0,0,0,0,0,0,1,1,1,0,0,1,3,0,
order_status_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.03025364875793457,0.0,0.0,0.0,104.98828125,104.98828125,0.0,3,1,0,0,0,0,0,0,0,1,1,1,0,0,1,3,0,
order_status_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.01915264129638672,0.0,0.0,0.0,104.98828125,104.98828125,0.0,3,1,0,0,0,0,0,0,0,1,1,1,0,0,1,3,0,
order_status_analysis_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.046930789947509766,0.0,0.0,0.0,104.98828125,104.98828125,0.0,3,1,0,0,0,0,0,0,0,1,1,1,0,0,1,3,0,
order_status_by_month,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.14992809295654297,0.0,0.0,0.0,104.98828125,104.98828125,0.0,324,1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,
order_status_by_month_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.14437127113342285,0.0,0.0,0.0,104.98828125,104.98828125,0.0,324,1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,
order_status_by_month_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.1383059024810791,0.0,0.0,0.0,104.98828125,104.98828125,0.0,324,1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,
order_status_by_month_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.12512445449829102,0.0,0.0,0.0,104.98828125,104.98828125,0.0,324,1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,
order_status_by_month_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.12488484382629395,0.0,0.0,0.0,104.98828125,104.98828125,0.0,324,1,0,0,0,0,0,0,0,1,1,1,0,0,0,2,0,
order_status_query,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.1459665298461914,0.0,0.0,0.0,104.98828125,125.78125,20.79296875,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
order_status_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.17187762260437012,0.0,0.0,0.0,106.1953125,125.703125,19.5078125,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
order_status_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.1661057472229004,0.0,0.0,0.0,107.10546875,125.76171875,18.65625,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
order_status_query_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.16257047653198242,0.0,0.0,0.0,109.01171875,125.8046875,16.79296875,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
order_status_query_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.15660619735717773,0.0,0.0,0.0,109.03515625,125.7265625,16.69140625,118757,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
order_status_summary,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0503389835357666,0.0,0.0,0.0,110.09375,110.09375,0.0,4,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
order_status_summary_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.04768037796020508,0.0,0.0,0.0,110.09375,110.09375,0.0,4,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
order_status_summary_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.05404496192932129,0.0,0.0,0.0,110.09375,110.09375,0.0,4,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
order_status_summary_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.04639291763305664,0.0,0.0,0.0,110.09375,110.09375,0.0,4,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
order_status_summary_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.04714822769165039,0.0,0.0,0.0,110.09375,110.09375,0.0,4,1,0,0,0,0,0,0,0,0,1,1,0,0,0,0,0,
product_performance_analysis,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),2.6239898204803467,0.0,0.0,0.0,110.09375,110.546875,0.453125,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,
product_performance_analysis_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),2.587982654571533,0.0,0.0,0.0,110.546875,110.546875,0.0,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,
product_performance_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),2.5765159130096436,0.0,0.0,0.0,110.546875,110.546875,0.0,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,
product_performance_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),2.6742024421691895,0.0,0.0,0.0,110.546875,110.546875,0.0,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,
product_performance_analysis_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),2.7396633625030518,0.0,0.0,0.0,110.546875,110.546875,0.0,2000,1,0,0,0,0,0,0,3,0,1,3,0,0,0,9,0,
product_stock_analysis,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005421876907348633,0.0,0.0,0.0,110.546875,110.546875,0.0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
product_stock_analysis_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0032320022583007812,0.0,0.0,0.0,110.546875,110.546875,0.0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
product_stock_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.003568887710571289,0.0,0.0,0.0,110.546875,110.546875,0.0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
product_stock_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0035469532012939453,0.0,0.0,0.0,110.546875,110.546875,0.0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
product_stock_analysis_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0054857730865478516,0.0,0.0,0.0,110.546875,110.546875,0.0,77,1,0,0,0,0,0,0,1,0,1,1,0,0,0,1,0,
stock_status,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.002391815185546875,0.0,0.0,0.0,110.546875,110.546875,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
stock_status_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0018701553344726562,0.0,0.0,0.0,110.546875,110.546875,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
stock_status_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.00200653076171875,0.0,0.0,0.0,110.546875,110.546875,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
stock_status_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.007463693618774414,0.0,0.0,0.0,110.546875,110.546875,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
stock_status_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0040814876556396484,0.0,0.0,0.0,110.546875,110.546875,0.0,4,1,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,
address_ending,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0031862258911132812,0.0,0.0,0.0,110.546875,110.546875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_ending_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0046443939208984375,0.0,0.0,0.0,110.546875,110.546875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_ending_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002853870391845703,0.0,0.0,0.0,110.546875,110.546875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_ending_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.004663705825805664,0.0,0.0,0.0,110.546875,110.546875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_ending_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0026047229766845703,0.0,0.0,0.0,110.546875,110.546875,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_postal_search,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""LIMIT""
LINE 1: ...AGG(DISTINCT first_name || ' ' || last_name, ', ' LIMIT 5) a...
                                                             ^
"
address_postal_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""LIMIT""
LINE 1: ...AGG(DISTINCT first_name || ' ' || last_name, ', ' LIMIT 5) a...
                                                             ^
"
address_postal_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""LIMIT""
LINE 1: ...AGG(DISTINCT first_name || ' ' || last_name, ', ' LIMIT 5) a...
                                                             ^
"
address_postal_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""LIMIT""
LINE 1: ...AGG(DISTINCT first_name || ' ' || last_name, ', ' LIMIT 5) a...
                                                             ^
"
address_postal_search_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""LIMIT""
LINE 1: ...AGG(DISTINCT first_name || ' ' || last_name, ', ' LIMIT 5) a...
                                                             ^
"
customer_domain_analysis,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),1.4721977710723877,0.0,0.0,0.0,110.5703125,110.5703125,0.0,3,1,0,0,0,0,0,0,1,0,1,1,0,0,0,5,0,
customer_domain_analysis_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),1.4225914478302002,0.0,0.0,0.0,110.5703125,110.5703125,0.0,3,1,0,0,0,0,0,0,1,0,1,1,0,0,0,5,0,
customer_domain_analysis_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),1.4248666763305664,0.0,0.0,0.0,110.5703125,110.5703125,0.0,3,1,0,0,0,0,0,0,1,0,1,1,0,0,0,5,0,
customer_domain_analysis_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),1.451033592224121,0.0,0.0,0.0,110.5703125,110.5703125,0.0,3,1,0,0,0,0,0,0,1,0,1,1,0,0,0,5,0,
customer_domain_analysis_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),1.473074197769165,0.0,0.0,0.0,110.5703125,110.5703125,0.0,3,1,0,0,0,0,0,0,1,0,1,1,0,0,0,5,0,
email_domain_search,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0027561187744140625,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
email_domain_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.003049612045288086,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
email_domain_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0030045509338378906,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
email_domain_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005094289779663086,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
email_domain_search_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0029282569885253906,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
inactive_users,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""(""
LINE 1: ...er_date) AS last_order_date, DATEDIFF(CURRENT_DATE(), MAX(o....
                                                             ^
"
inactive_users_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""(""
LINE 1: ...er_date) AS last_order_date, DATEDIFF(CURRENT_DATE(), MAX(o....
                                                             ^
"
inactive_users_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""(""
LINE 1: ...er_date) AS last_order_date, DATEDIFF(CURRENT_DATE(), MAX(o....
                                                             ^
"
inactive_users_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""(""
LINE 1: ...er_date) AS last_order_date, DATEDIFF(CURRENT_DATE(), MAX(o....
                                                             ^
"
inactive_users_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1.0,-1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,"syntax error at or near ""(""
LINE 1: ...er_date) AS last_order_date, DATEDIFF(CURRENT_DATE(), MAX(o....
                                                             ^
"
multi_table_query,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.007575273513793945,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
multi_table_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002431154251098633,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
multi_table_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0022411346435546875,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
multi_table_query_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.002105236053466797,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
multi_table_query_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.005766153335571289,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,1,1,0,0,0,0,0,1,0,
numeric_id_query,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0016450881958007812,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
numeric_id_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0030374526977539062,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
numeric_id_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0021944046020507812,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
numeric_id_query_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.001302480697631836,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
numeric_id_query_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002065420150756836,0.0,0.0,0.0,110.5703125,110.5703125,0.0,1,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
phone_area_code,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.005829572677612305,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
phone_area_code_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.007287025451660156,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
phone_area_code_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.0024645328521728516,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
phone_area_code_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.002819538116455078,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
phone_area_code_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.003052234649658203,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
product_model_search,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0047948360443115234,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,
product_model_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.004641532897949219,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,
product_model_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.002393484115600586,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,
product_model_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0025479793548583984,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,
product_model_search_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0023627281188964844,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,1,1,
product_name_suffix,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.0019750595092773438,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
product_name_suffix_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0019321441650390625,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
product_name_suffix_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.001687765121459961,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
product_name_suffix_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0018563270568847656,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
product_name_suffix_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0017511844635009766,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,1,
range_id_query,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.004436016082763672,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
range_id_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0021843910217285156,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
range_id_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.008536577224731445,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
range_id_query_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.0021889209747314453,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
range_id_query_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.0021445751190185547,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,1,0,0,
timestamp_query,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.024227142333984375,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
timestamp_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.002092123031616211,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
timestamp_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.03470039367675781,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
timestamp_query_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.03084111213684082,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
timestamp_query_gist,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.001970529556274414,0.0,0.0,0.0,110.5703125,110.5703125,0.0,101,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
address_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.003278493881225586,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.01087641716003418,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.009112834930419922,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.010380983352661133,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
address_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.009059906005859375,0.0,0.0,0.0,110.5703125,110.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,2,1,
complex_range_query,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.13114714622497559,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2436,1,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,
complex_range_query_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.15020966529846191,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2436,1,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,
complex_range_query_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.13222575187683105,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2436,1,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,
complex_range_query_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.13188624382019043,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2436,1,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,
complex_range_query_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.13286280632019043,0.0,0.0,0.0,110.5703125,110.5703125,0.0,2436,1,0,0,0,0,0,0,0,1,0,0,0,0,0,4,2,
customer_location_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002377033233642578,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,4,1,
customer_location_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.012981414794921875,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,4,1,
customer_location_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.010135412216186523,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,4,1,
customer_location_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.009696245193481445,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,4,1,
customer_location_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.011883974075317383,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,1,1,1,0,0,0,0,4,1,
full_text_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.05098533630371094,0.0,0.0,0.0,109.5703125,109.5703125,0.0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
full_text_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.03979921340942383,0.0,0.0,0.0,109.5703125,109.5703125,0.0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
full_text_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.04207873344421387,0.0,0.0,0.0,109.5703125,109.5703125,0.0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
full_text_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.04180335998535156,0.0,0.0,0.0,109.5703125,109.5703125,0.0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
full_text_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.039604902267456055,0.0,0.0,0.0,109.5703125,109.5703125,0.0,53,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
fuzzy_product_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.002376556396484375,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
fuzzy_product_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0055866241455078125,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
fuzzy_product_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.006169319152832031,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
fuzzy_product_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.01116180419921875,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
fuzzy_product_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.004914522171020508,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0,
product_description_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.008449554443359375,0.0,0.0,0.0,109.5703125,109.5703125,0.0,46,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,
product_description_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.008871078491210938,0.0,0.0,0.0,109.5703125,109.5703125,0.0,46,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,
product_description_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.008428096771240234,0.0,0.0,0.0,109.5703125,109.5703125,0.0,46,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,
product_description_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.009048700332641602,0.0,0.0,0.0,109.5703125,109.5703125,0.0,46,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,
product_description_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.008645296096801758,0.0,0.0,0.0,109.5703125,109.5703125,0.0,46,1,0,0,0,0,0,0,1,1,0,1,0,0,0,1,2,
product_search,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.005356311798095703,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,
product_search_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.005852222442626953,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,
product_search_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.006190299987792969,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,
product_search_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005896806716918945,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,
product_search_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.005518674850463867,0.0,0.0,0.0,109.5703125,109.5703125,0.0,0,1,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,
similar_category_products,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.13800883293151855,0.0,0.0,0.0,109.5703125,109.5703125,0.0,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,
similar_category_products_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.13946247100830078,0.0,0.0,0.0,109.5703125,109.53515625,-0.03515625,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,
similar_category_products_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.1428382396697998,0.0,0.0,0.0,109.53515625,109.53515625,0.0,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,
similar_category_products_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.14125967025756836,0.0,0.0,0.0,109.53515625,109.53515625,0.0,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,
similar_category_products_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.13509821891784668,0.0,0.0,0.0,109.53515625,109.53515625,0.0,47,1,0,0,0,0,0,0,1,1,0,1,0,0,0,2,0,
similar_products,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),4.725529432296753,0.0,0.0,0.0,109.53515625,109.84375,0.30859375,3848,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
similar_products_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),4.719998598098755,0.0,0.0,0.0,109.84375,109.96875,0.125,3848,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
similar_products_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),4.722040891647339,0.0,0.0,0.0,109.96875,109.96875,0.0,3848,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
similar_products_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),4.730920791625977,0.0,0.0,0.0,109.96875,109.96875,0.0,3848,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
similar_products_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),4.7309889793396,0.0,0.0,0.0,109.96875,109.96875,0.0,3848,1,0,0,0,0,0,0,0,1,0,1,0,0,0,0,0,
trigram_match,gist,GiST index for complex data types,CREATE INDEX gist_orders_date ON Orders USING GIST (order_date); CREATE INDEX gist_products_name ON Products USING GIST (name gist_trgm_ops); CREATE INDEX gist_users_address ON Users USING GIST (shipping_address gist_trgm_ops),0.005950450897216797,0.0,0.0,0.0,109.96875,109.96875,0.0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
trigram_match_btree,btree,B-Tree index for range queries and sorting,CREATE INDEX btree_orders_date ON Orders (order_date); CREATE INDEX btree_orders_user ON Orders (user_id); CREATE INDEX btree_products_category ON Products (category_id); CREATE INDEX btree_orderitems_order ON OrderItems (order_id); CREATE INDEX btree_orderitems_product ON OrderItems (product_id),0.0046503543853759766,0.0,0.0,0.0,109.96875,109.96875,0.0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
trigram_match_hash,hash,Hash index for equality comparisons,CREATE INDEX hash_users_email ON Users USING HASH (email); CREATE INDEX hash_products_id ON Products USING HASH (product_id); CREATE INDEX hash_orders_id ON Orders USING HASH (order_id),0.004491567611694336,0.0,0.0,0.0,109.96875,109.96875,0.0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
trigram_match_bitmap,bitmap,Bitmap index for low-cardinality columns,CREATE INDEX bitmap_orders_status ON Orders (status); CREATE INDEX bitmap_products_category ON Products (category_id); CREATE INDEX bitmap_categories_parent ON Categories (category_id),0.005760908126831055,0.0,0.0,0.0,109.96875,109.96875,0.0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
trigram_match_reverse,reverse,Reverse index for reducing concurrency contention,CREATE INDEX rev_users_id ON Users USING REVERSE (user_id); CREATE INDEX rev_orders_date ON Orders USING REVERSE (order_date); CREATE INDEX rev_products_name ON Products USING REVERSE (name),0.007754802703857422,0.0,0.0,0.0,109.96875,109.96875,0.0,3,2,0,0,0,0,0,0,0,1,0,0,0,0,0,1,0,
