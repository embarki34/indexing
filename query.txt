```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Shipped'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Shipped' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS NumberOfOrders,
    AVG(total_amount) AS AverageOrderValue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS NumberOfOrders, AVG(total_amount) AS AverageOrderValue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_items
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    total_items > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_items FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING total_items > 2;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  o.order_id,
  o.order_date,
  o.total_amount,
  SUM(oi.quantity) AS total_items
FROM orders AS o
JOIN orderitems AS oi
  ON o.order_id = oi.order_id
WHERE
  o.status = 'Delivered'
GROUP BY
  o.order_id,
  o.order_date,
  o.total_amount
ORDER BY
  o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_items FROM orders AS o JOIN orderitems AS oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    num_items > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING num_items > 2;`; preferindex: `btree`

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

```
quiri: SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 5; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science'; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
JOIN
    products p ON oi.product_id = p.product_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.product_id ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
query: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) != o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) != o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(DISTINCT o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.status = 'Delivered'
    AND o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);
```

;preferindex:btree

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  p.name AS product_name,
  c.name AS category_name,
  COUNT(oi.order_item_id) AS order_count
FROM products AS p
JOIN categories AS c
  ON p.category_id = c.category_id
LEFT JOIN orderitems AS oi
  ON p.product_id = oi.product_id
GROUP BY
  p.product_id,
  c.category_id
HAVING
  COUNT(oi.order_item_id) > 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products AS p JOIN categories AS c ON p.category_id = c.category_id LEFT JOIN orderitems AS oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id HAVING COUNT(oi.order_item_id) > 5;`; preferindex: `btree`

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.status, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
query: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10;
preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount; -- Find orders where total_amount doesn't match item totals.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: btree

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Pending'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount,  GROUP_CONCAT(p.name SEPARATOR ', ') AS products_ordered FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Pending'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM 
    orders
WHERE 
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date BETWEEN '2023-01-01' AND '2023-12-31'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM
    orders o
LEFT JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    COUNT(oi.order_item_id) > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(oi.order_item_id) > 2;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount; -- Find discrepancies between total order amount and sum of item amounts

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 5; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
HAVING
    COUNT(oi.order_item_id) > 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name HAVING COUNT(oi.order_item_id) > 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY 
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of item amounts exceeds the total order amount.

```

preferindex: btree

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    product_name, category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_items_ordered
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(*) > 1;
```

; preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
query: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date BETWEEN '2023-01-01' AND '2023-12-31'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount,  GROUP_CONCAT(oi.product_id ORDER BY oi.product_id SEPARATOR ', ') AS product_ids FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_items_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of item prices exceeds the order total

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_items_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  o.order_id,
  o.order_date,
  o.total_amount,
  SUM(oi.quantity * oi.price) AS total_item_amount
FROM orders AS o
JOIN orderitems AS oi
  ON o.order_id = oi.order_id
GROUP BY
  o.order_id,
  o.order_date,
  o.total_amount
HAVING
  SUM(oi.quantity * oi.price) > 100
ORDER BY
  o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders AS o JOIN orderitems AS oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science' ORDER BY p.price DESC LIMIT 5; preferindex: btree
```

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_quantity_ordered
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(*) > 1;
```

; preferindex: btree

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

```
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  o.order_id,
  o.order_date,
  o.total_amount,
  SUM(oi.quantity) AS total_items
FROM orders AS o
JOIN orderitems AS oi
  ON o.order_id = oi.order_id
WHERE
  o.status = 'Delivered'
GROUP BY
  o.order_id,
  o.order_date,
  o.total_amount
ORDER BY
  o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_items FROM orders AS o JOIN orderitems AS oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.name, c.name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

```text
quiri: SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

     ```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: btree

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_quantity
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_quantity FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) != o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) != o.total_amount;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- find orders where the sum of item prices exceeds the total order amount

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

```text
quiri: SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT COUNT(*) FROM products WHERE price > (SELECT AVG(price) FROM products); preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as order_item_total
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where order item totals exceed the order total
```

preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Shipped' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS total_ordered FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY total_ordered DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY o.order_date DESC limit 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC limit 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= '2023-01-01'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= '2023-01-01' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS products_ordered
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN 
    products p ON oi.product_id = p.product_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS products_ordered FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    order_count DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS NumberOfOrders,
    AVG(total_amount) AS AverageOrderValue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS NumberOfOrders, AVG(total_amount) AS AverageOrderValue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(DISTINCT p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(DISTINCT p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.name, c.name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(oi.order_item_id) > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(oi.order_item_id) > 2;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(DISTINCT o.user_id) AS unique_customers,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);
```

quiri: `SELECT COUNT(DISTINCT o.user_id) AS unique_customers, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 MONTH);`; preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of item prices exceeds the total order amount.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_items
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_items FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_order_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_order_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.name; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.product_id, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    COUNT(*)
FROM
    orders
WHERE
    status = 'Pending';
```

quiri: `SELECT COUNT(*) FROM orders WHERE status = 'Pending';`; preferindex: btree

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT COUNT(*) FROM products WHERE price > 100; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) > o.total_amount;
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;
preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_items
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_items FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(*) > 1;`; preferindex: `btree`

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS order_count FROM products p LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT AVG(p.price) AS average_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS num_orders,
    AVG(total_amount) AS avg_order_value
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS num_orders, AVG(total_amount) AS avg_order_value FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(DISTINCT o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date BETWEEN '2023-01-01' AND '2023-12-31';
```

quiri: `SELECT COUNT(DISTINCT o.order_id) AS total_orders, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31';`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```
quiri: SELECT COUNT(*) FROM products WHERE price > (SELECT AVG(price) FROM products); preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM
    orders o
LEFT JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    COUNT(oi.order_item_id) > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(oi.order_item_id) > 2;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount,  u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS total_items
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS total_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  p.name AS product_name,
  c.name AS category_name,
  COUNT(oi.order_item_id) AS total_orders
FROM products AS p
JOIN categories AS c
  ON p.category_id = c.category_id
LEFT JOIN orderitems AS oi
  ON p.product_id = oi.product_id
GROUP BY
  p.product_id,
  c.category_id
ORDER BY
  total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products AS p JOIN categories AS c ON p.category_id = c.category_id LEFT JOIN orderitems AS oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_items_value
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id
HAVING SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_items_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders
FROM
    orders
WHERE
    status = 'Pending';
```

quiri: `SELECT COUNT(*) AS total_orders FROM orders WHERE status = 'Pending';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science' ORDER BY p.price DESC LIMIT 5; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Check for discrepancies in total amounts

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT COUNT(*) FROM orders WHERE status = 'Pending'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN
    products p ON oi.product_id = p.product_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT COUNT(*) FROM products WHERE price > 100; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) = o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) = o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) = o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) = o.total_amount;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
  o.order_id,
  o.order_date,
  SUM(oi.quantity * oi.price) AS total_order_value
FROM orders AS o
JOIN orderitems AS oi
  ON o.order_id = oi.order_id
WHERE
  o.status = 'Delivered'
GROUP BY
  o.order_id,
  o.order_date
ORDER BY
  o.order_date DESC
LIMIT 10;
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders AS o JOIN orderitems AS oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders
FROM orders
WHERE status = 'Pending';
```

quiri: `SELECT COUNT(*) AS total_orders FROM orders WHERE status = 'Pending';`; preferindex: btree

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT AVG(p.price) AS average_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS total_items
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS total_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT  p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM  products p JOIN  categories c ON p.category_id = c.category_id LEFT JOIN  orderitems oi ON p.product_id = oi.product_id GROUP BY  p.product_id, c.category_name ORDER BY  total_orders DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_items_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of order item values exceeds the total order amount.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_items_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id
HAVING SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN 
    products p ON oi.product_id = p.product_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of order item values exceeds the total amount in the orders table.
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(oi.product_id ORDER BY oi.product_id SEPARATOR ',') AS product_ids FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    COUNT(DISTINCT o.user_id) AS unique_customers,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);
```

quiri: `SELECT COUNT(DISTINCT o.user_id) AS unique_customers, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 1 YEAR);`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(DISTINCT o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY); -- Orders placed in the last 30 days

```

quiri: `SELECT COUNT(DISTINCT o.order_id) AS total_orders, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    COUNT(oi.product_id) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(oi.product_id) > 1;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

```
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 5; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```
query: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10;
preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of item amounts exceeds the total order amount.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total_items_amount exceeds the order's total_amount

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING SUM(oi.quantity * oi.price) != o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) != o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS num_orders,
    AVG(total_amount) AS avg_order_value
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS num_orders, AVG(total_amount) AS avg_order_value FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS products_ordered
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN 
    products p ON oi.product_id = p.product_id
WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31'
GROUP BY o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS products_ordered FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31' GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    order_count DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.name ORDER BY order_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= '2023-01-01'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= '2023-01-01' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100
ORDER BY
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT COUNT(*) FROM products WHERE price > 100; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Pending'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
query: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100
ORDER BY 
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.status, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100 ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name SEPARATOR ', ') AS products
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
JOIN
    products p ON oi.product_id = p.product_id
WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
GROUP BY
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name SEPARATOR ', ') AS products FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS total_orders FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount,  u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.status, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    order_count DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY order_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 5;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 5; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount; --Find orders where total amount doesn't match item totals
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where order_item_total exceeds the total amount in the orders table
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) = o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) = o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_quantity_ordered
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_quantity_ordered FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity) AS total_quantity
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    COUNT(oi.product_id) > 1;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity) AS total_quantity FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(oi.product_id) > 1;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date BETWEEN '2023-01-01' AND '2023-12-31'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS total_orders FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```sql
SELECT
  o.order_id,
  o.order_date,
  SUM(oi.quantity * oi.price) AS total_order_value
FROM orders AS o
JOIN orderitems AS oi
  ON o.order_id = oi.order_id
GROUP BY
  o.order_id,
  o.order_date
HAVING
  total_order_value > 100
ORDER BY
  o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders AS o JOIN orderitems AS oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS total_orders FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_items_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total item value exceeds order total
```

preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM
    orders o
LEFT JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    COUNT(oi.order_item_id) > 2;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING COUNT(oi.order_item_id) > 2;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    total_order_value > 100
ORDER BY
    o.order_date DESC
LIMIT 10;
```

preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_order_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of order item amounts exceeds the order total

```

quiri: SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_order_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount; ; preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    COUNT(*) AS total_orders
FROM
    orders
WHERE
    status = 'Pending';
```

quiri: `SELECT COUNT(*) AS total_orders FROM orders WHERE status = 'Pending';`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC;
```

```
quiri: SELECT  p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM  products p JOIN  categories c ON p.category_id = c.category_id LEFT JOIN  orderitems oi ON p.product_id = oi.product_id GROUP BY  p.product_id, c.category_name ORDER BY  total_orders DESC; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN 
    products p ON oi.product_id = p.product_id
WHERE o.status = 'Delivered'
GROUP BY o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount; -- Find orders where total_amount doesn't match the sum of item amounts.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.name; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM
    orders
WHERE
    order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY); -- Orders in the last 30 days
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: btree

```sql
SELECT
    o.order_id,
    o.order_date,
    o.status,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.status
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.status, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total items cost exceeds the order total
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    COUNT(oi.order_item_id) AS num_items
FROM
    orders o
LEFT JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, COUNT(oi.order_item_id) AS num_items FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM 
    orders
WHERE 
    status = 'Delivered' AND order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered' AND order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    total_order_value DESC
LIMIT 10;
```

preferindex: btree

```
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.name; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
JOIN 
    products p ON oi.product_id = p.product_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT COUNT(*) FROM products WHERE price > (SELECT AVG(price) FROM products); preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name,COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date BETWEEN '2023-01-01' AND '2023-12-31'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date BETWEEN '2023-01-01' AND '2023-12-31' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total item amount exceeds the order total
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books' ORDER BY p.price DESC LIMIT 5; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM
    orders o
LEFT JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) > o.total_amount; -- This will find orders where the sum of items amounts is greater than the total amount on the order.
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY
    o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    COUNT(DISTINCT oi.product_id) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(DISTINCT oi.product_id) > 1;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount; -- Find orders where total_amount doesn't match item totals

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) = o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) = o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
JOIN
    products p ON oi.product_id = p.product_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
ORDER BY
    o.order_date DESC
LIMIT 10;
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, GROUP_CONCAT(p.name ORDER BY p.name SEPARATOR ', ') AS product_names FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id JOIN products p ON oi.product_id = p.product_id GROUP BY o.order_id, o.order_date, o.total_amount ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS order_count FROM products p LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.product_id, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.status,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.status
HAVING
    COUNT(*) > 1; -- Orders with more than one item

```

quiri: `SELECT o.order_id, o.order_date, o.status, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.status HAVING COUNT(*) > 1;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.product_id, c.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY)
ORDER BY o.order_date DESC;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 7 DAY) ORDER BY o.order_date DESC;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total amount of items exceeds the order total
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

```text
quiri: SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS order_item_total
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS order_item_total FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > 50 ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM orders o
JOIN orderitems oi ON o.order_id = oi.order_id
GROUP BY o.order_id, o.order_date
HAVING total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.name, c.name
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM
    categories c
LEFT JOIN
    products p ON c.category_id = p.category_id
GROUP BY
    c.name
ORDER BY
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    COUNT(*) > 1;
```

preferindex: btree

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    COUNT(*) AS total_orders,
    SUM(total_amount) AS total_revenue
FROM orders
WHERE status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS total_orders, SUM(total_amount) AS total_revenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, COUNT(oi.order_item_id) AS order_count FROM products p LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN orders o ON oi.order_id = o.order_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_quantity_sold DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_quantity_sold DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date, o.total_amount
HAVING
    SUM(oi.quantity * oi.price) > o.total_amount;
```

preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    COUNT(*) AS total_orders
FROM
    orders
WHERE
    status = 'Pending';
```

quiri: `SELECT COUNT(*) AS total_orders FROM orders WHERE status = 'Pending';`; preferindex: btree

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) as total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where total amount is inconsistent with item totals

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) as total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100
ORDER BY 
    total_order_value DESC;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100 ORDER BY total_order_value DESC;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    SUM(oi.quantity) AS total_quantity_sold
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_quantity_sold DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, SUM(oi.quantity) AS total_quantity_sold FROM products p JOIN categories c ON p.category_id = c.category_id JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_quantity_sold DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.name, c.name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name, c.name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_order_item_value
FROM 
    orders o
LEFT JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_order_item_value FROM orders o LEFT JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
HAVING 
    total_order_value > 100;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING total_order_value > 100;`; preferindex: `btree`

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE 
    o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT COUNT(*) FROM products WHERE price > 100; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS order_count
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    order_count DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS order_count FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY order_count DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT AVG(p.price) AS average_product_price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) <> o.total_amount;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) <> o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_spent DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Pending'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    COUNT(*) > 1;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(*) > 1;`; preferindex: `btree`

```sql
SELECT 
    COUNT(DISTINCT o.user_id) AS unique_customers,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);
```

quiri: `SELECT COUNT(DISTINCT o.user_id) AS unique_customers, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 3 MONTH);`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 5;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 5;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    c.name AS category_name,
    COUNT(p.product_id) AS product_count
FROM 
    categories c
LEFT JOIN 
    products p ON c.category_id = p.category_id
GROUP BY 
    c.name
ORDER BY 
    product_count DESC;
```

quiri: `SELECT c.name AS category_name, COUNT(p.product_id) AS product_count FROM categories c LEFT JOIN products p ON c.category_id = p.category_id GROUP BY c.name ORDER BY product_count DESC;`; preferindex: `btree`

```sql
SELECT 
    COUNT(DISTINCT o.order_id) AS total_orders,
    SUM(o.total_amount) AS total_revenue
FROM 
    orders o
WHERE 
    o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);
```

quiri: `SELECT COUNT(DISTINCT o.order_id) AS total_orders, SUM(o.total_amount) AS total_revenue FROM orders o WHERE o.order_date >= DATE_SUB(CURDATE(), INTERVAL 30 DAY);`; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_id
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Books' ORDER BY p.price DESC LIMIT 5; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM 
    orders o
JOIN 
    users u ON o.user_id = u.user_id
WHERE o.status = 'Shipped'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Shipped' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT
    COUNT(*) AS TotalOrders,
    SUM(total_amount) AS TotalRevenue
FROM
    orders
WHERE
    status = 'Delivered';
```

quiri: `SELECT COUNT(*) AS TotalOrders, SUM(total_amount) AS TotalRevenue FROM orders WHERE status = 'Delivered';`; preferindex: btree

```text
quiri: SELECT COUNT(*) FROM orders WHERE status = 'Pending'; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Delivered'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) as total_order_value
FROM 
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date
ORDER BY 
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) as total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of item amounts exceeds the order total
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```
query: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    COUNT(oi.product_id) > 2;
```

quiri: `SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date HAVING COUNT(oi.product_id) > 2;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT AVG(total_amount) AS average_order_value FROM orders WHERE status = 'Delivered'; preferindex: btree
```

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_id ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE
    o.status = 'Delivered'
ORDER BY
    o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Delivered' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_items_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > o.total_amount; -- Find orders where the sum of items price exceeds the order's total amount.

```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_items_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > o.total_amount;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name LIKE '%Science%' ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE p.price > (SELECT AVG(price) FROM products) ORDER BY p.price DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    u.first_name,
    u.last_name
FROM
    orders o
JOIN
    users u ON o.user_id = u.user_id
WHERE o.status = 'Pending'
ORDER BY o.order_date DESC
LIMIT 10;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, u.first_name, u.last_name FROM orders o JOIN users u ON o.user_id = u.user_id WHERE o.status = 'Pending' ORDER BY o.order_date DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```
quiri: SELECT p.name, c.name AS category_name, p.price FROM products p JOIN categories c ON p.category_id = c.category_id WHERE c.name = 'Science' ORDER BY p.price DESC LIMIT 5; preferindex: btree
```

```sql
SELECT 
    o.order_id,
    o.order_date,
    o.total_amount,
    SUM(oi.quantity * oi.price) AS total_item_amount
FROM 
    orders o
JOIN 
    orderitems oi ON o.order_id = oi.order_id
GROUP BY 
    o.order_id, o.order_date, o.total_amount
HAVING 
    SUM(oi.quantity * oi.price) > 100;
```

quiri: `SELECT o.order_id, o.order_date, o.total_amount, SUM(oi.quantity * oi.price) AS total_item_amount FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date, o.total_amount HAVING SUM(oi.quantity * oi.price) > 100;`; preferindex: `btree`

```text
quiri: SELECT p.name, c.name AS category_name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id JOIN categories c ON p.category_id = c.category_id GROUP BY p.name, category_name ORDER BY order_count DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: btree
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    p.product_id, c.category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.product_id, c.category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `btree`

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id ORDER BY total_order_value DESC LIMIT 10; preferindex: hash
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: index on orders(order_date, status, order_id) and index on orderitems(order_id, quantity, price)
```

```json
{
  "quiri": "SELECT p.name, COUNT(*) AS order_count FROM products p JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY p.name ORDER BY order_count DESC LIMIT 10;",
  "preferindex": "btree"
}
```

```sql
SELECT 
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM 
    products p
JOIN 
    categories c ON p.category_id = c.category_id
LEFT JOIN 
    orderitems oi ON p.product_id = oi.product_id
GROUP BY 
    product_name, category_name
ORDER BY 
    total_orders DESC
LIMIT 10;
```

quiri: `SELECT p.name AS product_name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products p JOIN categories c ON p.category_id = c.category_id LEFT JOIN orderitems oi ON p.product_id = oi.product_id GROUP BY product_name, category_name ORDER BY total_orders DESC LIMIT 10;`; preferindex: `hash`

```sql
SELECT
    p.name AS product_name,
    c.name AS category_name,
    COUNT(oi.order_item_id) AS total_orders
FROM
    products p
JOIN
    categories c ON p.category_id = c.category_id
LEFT JOIN
    orderitems oi ON p.product_id = oi.product_id
GROUP BY
    p.product_id, c.category_id
ORDER BY
    total_orders DESC
LIMIT 10;
```

; preferindex: btree

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_order_value FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: btree
```

```sql
SELECT
    o.order_id,
    o.order_date,
    SUM(oi.quantity * oi.price) AS total_order_value
FROM
    orders o
JOIN
    orderitems oi ON o.order_id = oi.order_id
GROUP BY
    o.order_id, o.order_date
HAVING
    COUNT(oi.product_id) > 2; -- Orders with more than 2 items

```

preferindex: btree;

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id WHERE o.status = 'Delivered' GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: B-tree
```

```text
quiri: SELECT o.order_id, o.order_date, SUM(oi.quantity * oi.price) AS total_spent FROM orders o JOIN orderitems oi ON o.order_id = oi.order_id GROUP BY o.order_id, o.order_date ORDER BY o.order_date DESC LIMIT 10; preferindex: order_id (btree)
```

```sql
SELECT
  p.name,
  c.name AS category_name,
  COUNT(oi.order_item_id) AS total_orders
FROM products AS p
JOIN categories AS c
  ON p.category_id = c.category_id
LEFT JOIN orderitems AS oi
  ON p.product_id = oi.product_id
GROUP BY
  p.name,
  category_name
ORDER BY
  total_orders DESC;
```

quiri: `SELECT p.name, c.name AS category_name, COUNT(oi.order_item_id) AS total_orders FROM products AS p JOIN categories AS c ON p.category_id = c.category_id LEFT JOIN orderitems AS oi ON p.product_id = oi.product_id GROUP BY p.name, category_name ORDER BY total_orders DESC;`; preferindex: `hash`

```sql
SELECT oi.order_item_id, p.name, p.price, oi.quantity
FROM orderitems oi
JOIN products p ON oi.product_id = p.product_id
WHERE oi.product_id IN (SELECT product_id FROM products WHERE category_id = 10)
  AND oi.order_id = 12345; --  Example order ID; replace with a suitable value or range.
```


```text
quiri: SELECT oi.order_item_id, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (1, 10, 100, 1000, 10000) , preferindex: HASH
```

```text
quiri: SELECT oi.order_item_id, oi.quantity, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (1, 10, 100, 1000, 10000);, preferindex: HASH
```

quiri: `SELECT oi.order_item_id, oi.quantity, oi.price FROM orderitems oi JOIN orders o ON oi.order_id = o.order_id WHERE o.order_id = 12345;`, preferindex: `HASH`

```
quiri: SELECT oi.order_item_id, oi.quantity, p.name AS product_name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (100, 200, 300, 400, 500);, preferindex: HASH
```

quiri: `SELECT oi.order_item_id, oi.quantity, p.name AS product_name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (1, 10, 100, 1000, 10000);`, preferindex: `HASH`

```text
quiri: SELECT oi.order_item_id, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (1, 10, 100, 1000, 10000);, preferindex: HASH
```

```json
{
  "quiri": "SELECT oi.order_item_id, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (1, 10, 100, 1000, 10000);",
  "preferindex": "HASH"
}
```

```text
quiri: SELECT oi.order_item_id, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.order_id = 12345; , preferindex: HASH
```

```text
quiri: SELECT oi.order_item_id, oi.quantity, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.order_id = 12345; , preferindex: HASH
```

quiri: SELECT oi.order_item_id, p.name, p.price FROM orderitems oi JOIN products p ON oi.product_id = p.product_id WHERE oi.product_id IN (100, 200, 300, 400, 500);, preferindex: HASH

